# Optimiertes Dockerfile für die Entwicklung

# Verwenden Sie ein offizielles Python-Image als Basis.
# Dies gibt Ihnen mehr Kontrolle über die Umgebung und die Abhängigkeiten.
FROM python:3.10-slim-bullseye

# Argumente für non-interactive Installation, um Warnungen zu vermeiden.
ARG DEBIAN_FRONTEND=noninteractive

# Installieren Sie Systemabhängigkeiten, die für TTS benötigt werden (z.B. für Audioverarbeitung).
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libsndfile1 \
    ffmpeg \
    espeak-ng \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Legen Sie das Arbeitsverzeichnis fest.
WORKDIR /app

# (Optional) Installieren Sie zuerst die Abhängigkeiten, um den Docker-Cache zu nutzen.
# Kopieren Sie nur die Anforderungsdatei.
COPY requirements.txt .

# Installieren Sie die Pakete. Dieser Schritt wird nur dann erneut ausgeführt,
# wenn sich die requirements.txt ändert. Stellen Sie sicher, dass 'TTS' in Ihrer requirements.txt enthalten ist.
RUN pip install --no-cache-dir -r requirements.txt

# Kopieren Sie nun den restlichen Anwendungscode.
# Änderungen am Code führen nicht zu einer Neuinstallation der Abhängigkeiten.
COPY . .

# Standardbefehl für die Entwicklung: eine interaktive Shell.
# So können Sie den Container betreten und Befehle ausführen.
CMD ["/bin/bash"]
